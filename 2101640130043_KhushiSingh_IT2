#include<stdio.h>
#include<stdlib.h>

struct node{

int data;
struct node*address;
}s;
void insertatfront(struct node** head, int data)
{
	struct node* node=(struct node*)malloc(sizeof(struct node));
	node->data=data;
	node->address=*head;
	*head=node;
}
void insertatend(struct node** head,int data)
{
	struct node* node;
	node=(struct node*)malloc(sizeof(struct node));
	node->data=data;
	node->address=NULL;
	if(head==NULL)
	{
		*head=node;
	}
	struct node* s;
	s=*head;
	while(s->address!=NULL)
	{
		s=s->address;
		
	}
	s->address=node;
}
void insertatloc(struct node** head,int data,int after)
{
	struct node* node=(struct node*)malloc(sizeof(struct node));
	node->data=data;
	node->address=NULL;
	struct node* s;
	s=*head;
	while(s->data!=after){
		s=s->address;
	}
	node->address=s->address;
	s->address=node;
}
void display(struct node* head){
	struct node* s;
	s=head;
	while(s!=NULL){
	
		printf("%d  ",s->data);
		s=s->address;
		
	}
	
}
void deleteatfront(struct node** head){
	struct node* temp;
	temp=*head;
	*head=temp->address;
	free(temp);
}
void deleteatend(struct node** head){
	struct node* s;
	s=*head;
	
		while(s->address->address!=NULL)
		{
			s=s->address;
		}
		free(s->address);
		s->address=NULL;
	
}
void deleteatspecificloc(struct node** head,int loc){
	struct node* s;
	s=*head;
while((loc-2)>0)
{
	s=s->address;
}
struct node* temp;
temp=s->address;
s->address=s->address->address;
free (temp);
	
}
void middle(struct node** head){
	struct node* slow;
	struct node* fast;	
	slow=fast=*head;
	if(head==NULL)
	{
		printf("\n linked list is empty");
		return;
	}
	else
	{
		while(fast!=NULL && fast->address!=NULL){
			slow=slow->address;
			fast=fast->address->address;
		}
		printf("%d",slow->data);
	}
}

int main(){
	int choice,after;
	struct node* head;
	head=NULL;
	while(1)
	{
		int data;
		printf("\n linklist menu");
		printf("\n 1.insert at beg");
		printf("\n 2.insert at end");
		printf("\n 3.insert at loc");
		printf("\n 4.delete at front");
		printf("\n 5.delete at end");
		printf("\n 6.delete at specific loc");
	
		printf("\n 7. display");
		printf("\n enter your choice=");
		scanf("%d",&choice);
		if(choice==1)
		{
				printf("\n enter data=");
				scanf("%d",&data);
				insertatfront(&head,data);
	}
	else if(choice==2)
	{
					printf("\n enter data");
					scanf("%d",&data);
					insertatend(&head,data);
				}
					else if(choice==3)
					{
						printf("\n enter data");
						scanf("%d",&data);
						scanf("%d",&after);
						insertatloc(&head,data,after);
				}
				
				else if(choice==7)
				{
							display(head);
						}
						else if(choice==6)	
						{
							int loc;
							scanf("%d",&loc);
							deleteatspecificloc(&head,loc);
							
						}
						else if(choice==4){
							deleteatfront(&head);
						}
						else if(choice==5){
							deleteatend(&head);
						}
						
							else
								printf(" invalid choice");
	}middle(&head);
}
